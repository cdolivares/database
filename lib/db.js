// Generated by CoffeeScript 1.4.0

/*
Model builder
*/


(function() {
  var Db, ModelBuilder, ModelDirector, ModelGraph, ModelNodeBuilder, MongooseB, MongooseBuilder,
    __slice = [].slice;

  ModelBuilder = require("model-builder");

  MongooseBuilder = require("mongoose-builder");

  ModelGraph = ModelBuilder.Graph;

  ModelDirector = ModelBuilder.Director;

  ModelNodeBuilder = ModelBuilder.NodeBuilder;

  MongooseB = MongooseBuilder.Builder;

  Db = (function() {
    /*
        Method: constructor
    
        Initialize Db with a reference to where relation, schema, and 
        dbSettings files are.
    */

    function Db(schemaPath, dbSettingsPath) {
      this._schemaPath = schemaPath;
      this._dbSettingsPath = dbSettingsPath;
      this._files = {};
    }

    /*
        Method: loadConfigs
    
        Loads
          -relational
          -schema
          -dbSettings
        configs.  The result should be a JSON object.
    */


    Db.prototype.init = function(callback) {
      var director,
        _this = this;
      this._nodeBuilder = new ModelNodeBuilder(this._schemaPath);
      this._nodeBuilder.init();
      this._dbBuilder = new MongooseB(this._nodeBuilder, this.settings);
      director = new ModelDirector(this._dbBuilder);
      return director.build(function(err) {
        var graph;
        console.log("Database Initialized...");
        graph = new ModelGraph();
        director.setGraph(graph);
        return callback(null, graph);
      });
    };

    /*
        Method: RegisterPlugin
    
        Defer to the the driver implementation of registerPlugin. In
        this case m
    */


    Db.prototype.registerPlugin = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return this._dbBuilder.registerPlugin.apply(this._dbBuilder, args);
    };

    /*
        File Getters
    
        relational - defines the relationships between our mongo models
    
        schema - defines the schema of each model
    
        settings - database connection settings.
    */


    Db.prototype.__defineGetter__('settings', function() {
      var _this = this;
      return this._files.settings || (this._files.settings = (function() {
        return require(_this._dbSettingsPath).init(process.env.NODE_ENV);
      })());
    });

    return Db;

  })();

  module.exports = Db;

}).call(this);
